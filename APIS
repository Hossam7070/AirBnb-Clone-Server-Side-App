message

// create message
post => "http://localhost:4000/message/"
//git all messages for specific conversation
get => "http://localhost:4000/message/:conversationId"

_______________________________________________________

conversation

// create conversation
post => "http://localhost:4000/conversation/"
//git all conversations for specific user
get => "http://localhost:4000/conversation/:userId"
//git conversation between two users
get => "http://localhost:4000/conversation/:firstUserId/:secondUserId"

_______________________________________________________

report

// create report
post => "http://localhost:4000/report/"
//git all reports 
get => "http://localhost:4000/report/"
//main router
//git a specific type of report for specific target
get => "http://localhost:4000/report/type/:type/target/:id"
//git a specific type of report for specific reporter
get => "http://localhost:4000/report/type/:type/reporter/:id"
//other routers
//git all types of reports for specific target
get => "http://localhost:4000/report/target/:id"
//git all types of reports for specific reporter
get => "http://localhost:4000/report/reporter/:id"

_______________________________________________________

booking

http://localhost:4000/booking
method :post 
desc: create reservation 
req: req.body ={
            property:id
            host:id
            guest:id
	checkIn:date
            checkOut,date
        }
res : booking
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//git all bookings
get => "http://localhost:4000/booking/"
//git all bookings for specific property
get => "http://localhost:4000/booking/list/:Id"
//git all bookings for specific host
get => "http://localhost:4000/booking/host/:Id"
//update booking
patch => "http://localhost:4000/booking/update-booking/:Id"
>>>>>>>>>>>>>>>>>>>>>>>>>>>
http://localhost:4000/booking/id
method : get 
desc : aprrove booking 
req : req.params = booking id 
method : post 
desc : cancel booking 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>________________________________________________________

property

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
http://localhost:4000/upload/:id
method : patch
desc : upload listing imageCover and images
req:req.params.id = listing id , req.file = {imageCover:onephoto , images : [max 7 ] 
res : listing
download path :  http://localhost:4000/puplic/img/listing/filename___________________________________________
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
http://localhost:4000/
post > create new property
req : req.headers = {autherization : token }, req.body = propety 

'/:id
patch edit  prop
delete delete  prop 
user
http://localhost:4000/user/update-user/:id
method : patch 
desc : upload user photo 
req : req.params = user id ,form-data =>  req.file.photo = uploaded photo 
res : status , user
download path :  http://localhost:4000/puplic/img/users/filename



user sign up : http://localhost:4000/sign-up
post > create new user


user sign in : http://localhost:4000/login
post > login user and get user token
res : {token} 

user data : http://localhost:4000/
get > req.headers : { autherization : token }
get user details 

user listings :  http://localhost:4000/my-prop
post > req.headers : { autherization : token }
get user listings

dashboard : 

__________________________________________________________



